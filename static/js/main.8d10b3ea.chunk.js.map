{"version":3,"sources":["Files/career.pdf","logo.svg","Images/vinyl.png","Header.js","Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","react_social_icons","network","bgColor","style","height","width","url","target","React","Component","App","Header_Header","class","src","require","href","Pdf","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6KCInBC,cACjB,SAAAA,EAAYC,GAAQ,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KACVH,0EAIN,OACAO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,WAAD,CACIC,QAAQ,WACRC,QAAQ,UACRC,MAAO,CAAEC,OAAQ,GAAIC,MAAO,IAC5BC,IAAI,2CACJC,OAAO,YAGfX,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,WAAD,CACIC,QAAQ,YACRC,QAAQ,UACRC,MAAO,CAAEC,OAAQ,GAAIC,MAAO,IAC5BC,IAAI,6CACJC,OAAO,YAGfX,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,WAAD,CACIC,QAAQ,WACRC,QAAQ,UACRC,MAAO,CAAEC,OAAQ,GAAIC,MAAO,IAC5BC,IAAI,sDACJC,OAAO,oBAhCSC,IAAMC,cCDND,IAAMC,0BC2C3BC,MAjCf,WACE,OACEd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKc,MAAM,QAAQC,IAAOC,EAAQ,MAClClB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,eACcH,EAAAC,EAAAC,cAAA,WADd,cAEaF,EAAAC,EAAAC,cAAA,WAFb,aAKAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,UAGAH,EAAAC,EAAAC,cAAA,OAAMC,UAAU,eACdH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGiB,KAAMC,IAAKT,OAAO,UAArB,iBAEFX,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,UAAR,qBCzBME,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3B,EAAAC,EAAAC,cAAC0B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8d10b3ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/career.313894aa.pdf\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/vinyl.462c51cc.png\";","import React from 'react';\nimport { SocialIcon } from 'react-social-icons';\n\n\nexport default class Header extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render () {\n        return (\n        <div className=\"social-media-header\">\n            <li>\n                <SocialIcon \n                    network=\"facebook\" \n                    bgColor=\"#000000\"  \n                    style={{ height: 45, width: 45 }}\n                    url=\"https://www.facebook.com/harry.osullivan\"\n                    target=\"_blank\"\n                    />\n            </li>\n            <li>\n                <SocialIcon \n                    network=\"instagram\" \n                    bgColor=\"#000000\"  \n                    style={{ height: 45, width: 45 }}\n                    url=\"https://www.instagram.com/harryo_sullivan/\"\n                    target=\"_blank\"\n                    />\n            </li>\n            <li>\n                <SocialIcon \n                    network=\"linkedin\" \n                    bgColor=\"#000000\"  \n                    style={{ height: 45, width: 45 }}\n                    url=\"ps://www.linkedin.com/in/harry-o-sullivan-3a9a9676/\"\n                    target=\"_blank\"\n                    />\n            </li>\n        </div>\n        )\n    }\n}","import React from 'react';\n\n\nexport default class Resume extends React.Component {\n\n      \n      render () {\n          return (\n            <div className=\"Sleeve\">\n            </div>\n          )\n      }\n\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, HashRouter, Route, Link, Switch } from 'react-router-dom';\nimport Header from './Header';\nimport { \n  CSSTransition, \n  TransitionGroup \n} from 'react-transition-group';\nimport Resume from './Resume';\n\nimport Pdf from './Files/career.pdf';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"App-Container\">\n        <img class=\"Vinyl\" src = {require(\"./Images/vinyl.png\")}/>\n        <div className=\"Vinyl-Label\">\n          <br/>\n          <h1>HARRY O'SULLIVAN</h1>\n          <br/>\n          <br/>\n          <div className=\"Speed-Label\">\n            SRTTX024 EP <br/>\n            33 1/3 RPM <br/>\n            Â© 1994\n          </div>\n          <div className=\"Side-Label\">\n            SIDE A\n          </div>\n          < div className=\"Track-Label\">\n            <li> \n              <a href={Pdf} target=\"_blank\">A1. \"CAREER\"</a>\n            </li>\n            <li> \n              <a href=\"/music\">B1. \"MUSIC\"</a>\n            </li>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n/* <Link to=\"/resume\">A1. RESUME</Link> */ ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}